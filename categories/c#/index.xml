<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C# on 隨筆</title>
    <link>https://harveyChang67.github.io/categories/c#/</link>
    <description>Recent content in C# on 隨筆</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 18 May 2022 07:19:28 +0000</lastBuildDate><atom:link href="https://harveyChang67.github.io/categories/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C_sharp_big5</title>
      <link>https://harveyChang67.github.io/posts/c_sharp_big5/</link>
      <pubDate>Wed, 18 May 2022 07:19:28 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/c_sharp_big5/</guid>
      <description>需求 老式需求
3 個欄位的資訊， 希望擷取出中間的 16 bytes 的欄位
20040609台北市第81分公司0800-000123 20040609彰化縣第1分公司 0800-000123 通常會困擾於 編譯器對於資料型態長度的判定、編碼。 （其他程式語言也會遇到類似狀況）
在 C# 中則會遇到 string Length 變動的問題無法如預期做切割， 因此運用「==Big5編碼==」方式在 中文佔用 2 bytes、英數佔用 1 bytes 的特性， 再轉為 sub string。
System.Text.Encoding encoding = System.Text.Encoding.GetEncoding(950); string tempstr = &amp;#34;&amp;#34;; byte[] strBytes = encoding.GetBytes(str); tempstr = encoding.GetString(strBytes, start, lengths); </description>
    </item>
    
    <item>
      <title>LINQ cheat sheet</title>
      <link>https://harveyChang67.github.io/posts/linq_cheat_sheet/</link>
      <pubDate>Tue, 02 Nov 2021 05:09:10 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/linq_cheat_sheet/</guid>
      <description>LINQ Samples
101 LINQ Samples
LINQ: Query Comprehension Syntax</description>
    </item>
    
    <item>
      <title>C# 處理大 Text 檔案的實驗比對</title>
      <link>https://harveyChang67.github.io/posts/c-sharp-the-fastest-way-to-_-text/</link>
      <pubDate>Tue, 19 Oct 2021 09:07:56 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/c-sharp-the-fastest-way-to-_-text/</guid>
      <description>直觀寫法肯定是：
 Readline() 每行比對、處理一次  這邊有兩個網頁做了 ＂充分的＂實驗比對，
 C# .Net: Fastest Way to Read Text Files The Fastest Way to Read and Process Text Files using C# .Net  結論是， 把檔案都讀進 Array （相當於進記憶體）， 再運用平行運算處理完。</description>
    </item>
    
    <item>
      <title>Compare: String Text or String Length?</title>
      <link>https://harveyChang67.github.io/posts/dotnet_compare_string/</link>
      <pubDate>Wed, 13 Oct 2021 02:33:44 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/dotnet_compare_string/</guid>
      <description>近日看到一篇討論文章： c# string performance - what is faster to compare, string text or string length
被接受的答案雖然蠻合理的，但有其他補充關於 C# String 的 source code 可以發現：
都考量到了
所以可以直接比對&amp;hellip;</description>
    </item>
    
  </channel>
</rss>
