<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>misc on Harvey&#39;s 隨筆</title>
    <link>https://harveyChang67.github.io/categories/misc/</link>
    <description>Recent content in misc on Harvey&#39;s 隨筆</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 05 Mar 2023 03:27:20 +0000</lastBuildDate><atom:link href="https://harveyChang67.github.io/categories/misc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bloom_filter</title>
      <link>https://harveyChang67.github.io/posts/bloom_filter/</link>
      <pubDate>Sun, 05 Mar 2023 03:27:20 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/bloom_filter/</guid>
      <description>Bloom Filter 布隆過濾器：「不存在 為可確定，存在 為＂可能＂」 聽朋友聊到 Bloom Filter 布隆過濾器覺得有趣， 做了點調查。
這篇文章說明得較清楚： 深入浅出BloomFilter原理 - 刘训灼的文章 - 知乎
由於 Bloom Filter 的原理特性 使得「不存在 為可確定，存在 為＂可能＂」， 存在可以推的（可控的）誤判率， 因此合適其優勢的情境有些特徵，如：
 大數據 下 希望運用類 Hash 來過濾，希望避免 Hash 衝突 合適的 二元向量 數量 合適的 Hash function 數量  特別好奇於把一個對其＂存在＂具有一定誤判率的東西， 拿來用在「判断一个元素是否在集合中」的方式&amp;hellip; 頗有趣的可以強調 正面用、反面用。
「不存在為確定」特性
 緩存穿透 的攻擊，優先排除掉 不合規Key 的 request 訪問。 延伸課題：緩存做水平擴展、熱點調教、&amp;hellip;
 運用「存在判斷有可控極低的誤判率」特性
 爬蟲過濾掉疑似曾經訪問過的 URL。（代價是可能少抓到頁面）
 特殊運用： 資料採集之：巧用布隆過濾器提取資料摘要
Reference 什么是缓存雪崩、缓存击穿、缓存穿透？ - java技术爱好者的文章 - 知乎 什么是缓存雪崩、击穿、穿透？ 布隆过滤器与布谷鸟过滤器 - 终端研发部的文章 - 知乎 硬核 | Redis 布隆（Bloom Filter）过滤器原理与实战 - 码哥字节的文章 - 知乎</description>
    </item>
    
    <item>
      <title>2022_review</title>
      <link>https://harveyChang67.github.io/posts/2022_review/</link>
      <pubDate>Fri, 20 Jan 2023 00:14:29 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/2022_review/</guid>
      <description>2022 小小回顧 分享幾個今年的領會來做個回顧。
《易經》教會我衡量主觀、客觀、時機、演變等道理， 讓我生活、工作中的多事讓我產生很多的省思。
轉到現職時向天地、菩薩卜問的卦－巽卦很好的交代了我的工作內容。
所在單位希望進行雲端化的大工程， 我嘗試幫忙在維護為主的組織文化中引領一群 Junior 挑戰 研發 任務， 在 團隊合作、成員培養、技術探勘、學習、舊AP的底層技術破解、人員招募 等方面都有著巽卦的寓意表現， （這部分也讓我曾被前同事說過很像 龍 的特點） 其中特別想分享的是我在 人員招募、團隊合作、技術學習方面 等方面在思維層面上的學習， 這些體驗的描述通常不會侷限在 單一觀點 或是限制在 單一層面， 造成不好理解的地方請多見諒。
招募 這年我幫忙招募在 104 上看過了非常多的履歷，以及進行了不下 30 場面試面談，調整過數次我的面試面談的進行方式與提問內容。 首先我想分享的是：
 你的 104 履歷被看過，不太表用人單位真的有興趣
 原因很簡單：招募人員可以都先點開後續慢慢挑，下次查詢用「只看未讀」來過濾。 也因此常有人說 「104 的履歷可以關閉一陣子，微調內容再開，可能有新機會」的成因。 （當然，有時間的單位可以做個爬蟲去撈，分析內容關鍵字來省事）
履歷內容的評估 引申出履歷內容最好要有：
  深度（如 心智圖可以展開數層）。 將經歷 抽象化 的主要敘述，經歷成為 use case。 人格特質。（特別的心得、成就、行為慣性）   不知道各家資方除了技術關鍵字之外還會下什麼千奇百怪的&amp;hellip; （認真、負責、抗壓、&amp;hellip;） 但懶得寫請出、不擅長寫的人還是居多， 其次是寫不到重點（檢討中~）。
特別的是，若能將思維脫離「讓人知道我」轉移到「針對需求去寫」那就神了。
「過去績效不代表未來之表現」  半年前我對 適才適所 很不以為然，半年後我信了。
 『適才適所』 這句話其實囊括了 主客觀 雙重因素去配合的， 正如《易經》 64 卦的 上下卦、7 habits 的 雙贏思維、知彼解己 的概念。</description>
    </item>
    
    <item>
      <title>指引 =&gt; 槓桿 x 時勢</title>
      <link>https://harveyChang67.github.io/posts/timing_situation/</link>
      <pubDate>Sun, 21 Aug 2022 09:56:52 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/timing_situation/</guid>
      <description>易經《彖辭》中有十二卦提到「時」的「大矣哉」。 孔子晚年讀《易經》最有感想的是 『時也，命也。』
孫子曰： 『昔之善戰者，先為不可勝，==以待敵之可勝==。不可勝在己，可勝在敵。故善戰者，能為不可勝，不能使敵之必可勝。故曰：勝可知，而不可為。』
『故善戰者，求之於勢，不責於人，故能==擇人而任勢==。任勢者，其戰人也，如轉木石。木石之性，安則靜，危則動，方則止，圓則行。故善戰人之勢，如轉圓石於千仞之山者，勢也。』
宣揚實踐理念、做事、&amp;hellip;. 都講求這個&amp;hellip; 難得糊塗~~</description>
    </item>
    
    <item>
      <title>Linux_run_sh_error</title>
      <link>https://harveyChang67.github.io/posts/linux_run_sh_error/</link>
      <pubDate>Wed, 29 Dec 2021 08:28:12 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/linux_run_sh_error/</guid>
      <description>Linux 執行 .sh 後出現 Syntax Error
 Syntax error: end of file unexpected (expecting “then”)
 問題不是語法錯誤，而是檔案編碼問題。
解決辦法是：
 dos2unix  或是 VSCode 右下方從 CRLF --&amp;gt; LF</description>
    </item>
    
    <item>
      <title>Cret Exam</title>
      <link>https://harveyChang67.github.io/posts/cert_exam/</link>
      <pubDate>Wed, 08 Dec 2021 09:00:13 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/cert_exam/</guid>
      <description>記錄用
證照考試因為接觸到的資源是以英文為主， 為了避免關鍵字句不習慣翻譯版本（甚至簡體中文）， 所以考試可能、預設採用英文， 但是英文閱讀能力不頂尖的可能會敗在情境題組， 如：一整頁說明現況、各類型需求後， 再往下才會看到真正的題目。
實際應考發現， 各種英文閱讀考試技巧確實有用， 大概如下：
 快速掃描一次情境敘述，弄清楚『各處資訊類型』 看題目、選項後再去文章找有關資訊 答題  另方面， 上完證照課程後 ＂絕對＂ 不要直接去考試， 請去刷一下題庫感受一下：
 出題方式 出題方向  畢竟結果還是王道。</description>
    </item>
    
    <item>
      <title>Signed Cert</title>
      <link>https://harveyChang67.github.io/posts/signed-cert/</link>
      <pubDate>Thu, 25 Nov 2021 07:35:29 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/signed-cert/</guid>
      <description>產生並信任你自己的憑證 https://letsencrypt.org/zh-tw/docs/certificates-for-localhost/
openssl req -x509 -out localhost.crt -keyout localhost.key \  -newkey rsa:2048 -nodes -sha256 \  -subj &amp;#39;/CN=localhost&amp;#39; -extensions EXT -config &amp;lt;( \  printf &amp;#34;[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth&amp;#34;) 也說了 minica
2 https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8
有些方法 還有 mkcert &amp;lt;&amp;ndash; 最方便</description>
    </item>
    
    <item>
      <title>Husky &amp; Gitkraken</title>
      <link>https://harveyChang67.github.io/posts/husky-gitkraken/</link>
      <pubDate>Tue, 16 Nov 2021 03:20:56 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/husky-gitkraken/</guid>
      <description>GitKraken v7.7.2 之後改個設定就好： Windows 上執行的話，需要指定 GitKraken 關於 『sh.exe』的 path。</description>
    </item>
    
    <item>
      <title>VsCode 繪製 Draw.io</title>
      <link>https://harveyChang67.github.io/posts/drwaio_vscode/</link>
      <pubDate>Fri, 22 Oct 2021 13:37:43 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/drwaio_vscode/</guid>
      <description> VSCode Extension: Draw.io Integration diagrams-net-azure-libraries  </description>
    </item>
    
    <item>
      <title>Remove Tfs Connection From vs Solution</title>
      <link>https://harveyChang67.github.io/posts/remove-tfs-connection-from-vs-solution/</link>
      <pubDate>Thu, 07 Oct 2021 05:59:56 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/remove-tfs-connection-from-vs-solution/</guid>
      <description>  刪除專案中 *.vssscc、*.vspscc 副檔名的檔案。
  刪除 .sln 內的 GlobalSection(TeamFoundationVersionControl) 區塊。
  內部的 *.__proj 檔案內的這幾項也必須刪除：
&amp;lt;SccProjectName&amp;gt;XXX&amp;lt;/SccProjectName&amp;gt; &amp;lt;SccLocalPath&amp;gt;XXX&amp;lt;/SccLocalPath&amp;gt; &amp;lt;SccAuxPath&amp;gt;XXX&amp;lt;/SccAuxPath&amp;gt; &amp;lt;SccProvider&amp;gt;XXX&amp;lt;/SccProvider&amp;gt; 萬一實在太多了，請這條正規表示式 /^\s*(?:&amp;lt;Scc\w+&amp;gt;).+$/，使用 Notepad++ search &amp;amp; replace。
  </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://harveyChang67.github.io/posts/hello-world/</link>
      <pubDate>Sat, 25 Sep 2021 07:26:54 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/hello-world/</guid>
      <description>Hugo + GitHub 的方式架設簡單的 Blog 很有趣，這邊紀錄幾個資訊。
 建置、測試環境：docker 編譯：Github Action Hosting：Github  Hugo 建置、測試環境：klakegg/hugo 環境指令：
docker run --rm -it -v $(pwd):/src klakegg/hugo:0.83.1 Windows 環境指令：
docker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 其後接 Hugo 的指令即可，例如：
  新增 post：
docker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 new posts/___.md   Local 執行 HUGO Server
docker run --rm -it -v %cd%:/src -p 1313:1313 klakegg/hugo:0.83.1 server   Themes：PaperMod https://github.com/adityatelange/hugo-PaperMod
裡面的安裝指引可供參考</description>
    </item>
    
  </channel>
</rss>
