<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 隨筆</title>
    <link>https://harveyChang67.github.io/posts/</link>
    <description>Recent content in Posts on 隨筆</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 06 Oct 2021 06:33:32 +0000</lastBuildDate><atom:link href="https://harveyChang67.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Pipelines 編譯VS專案引用外部參考資源 － Libaray Securefile</title>
      <link>https://harveyChang67.github.io/posts/azure-pipelines-libaray-securefile/</link>
      <pubDate>Wed, 06 Oct 2021 06:33:32 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/azure-pipelines-libaray-securefile/</guid>
      <description>若 WinForms 的專案有依些外部參考的 dll 在編譯時需要引入，數量有可能20-30個不等。 若因為並非這個專案內 Code Base所產生而不想放在 Git Repository 內，上去 Azure Devops 編譯可以這樣處理：
  全部壓縮一包 .zip
  上傳至「Library」   設定開放給 Pipeline 引用的權限   在 Pipelines 的 yaml 設定內加上 Download &amp;amp; Extract   編譯時可以加上參數指定這個暫時路徑：
- task: VSBuild@1 inputs: solution: &amp;#39;**\*.csproj&amp;#39; platform: &amp;#39;AnyCPU&amp;#39; configuration: &amp;#39;$(BuildConfiguration)&amp;#39; msbuildArgs: &amp;#39;/p:referencepath=$(Agent.TempDirectory)/reference&amp;#39; clean: true   就可以完成了。</description>
    </item>
    
    <item>
      <title>Pipeline Error About Free Parallelism</title>
      <link>https://harveyChang67.github.io/posts/pipeline-error-about-free-parallelism/</link>
      <pubDate>Fri, 01 Oct 2021 02:14:31 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/pipeline-error-about-free-parallelism/</guid>
      <description>嘗試用 Azure Pipeline 編譯 WinForms 的程式遇到一個問題：
 「No hosted parallelism has been purchased or granted」
 直接依照指示到 https://aka.ms/azpipelines-parallelism-request 填寫完成後 1-2個工作日可以完成 （操作步驟可以參考：【把玩Azure DevOps】Day8 CI/CD從這裡：設定第一個Pipeline(成功與失敗)）
看國外論壇討論說，因為微軟發現有不少人趁著試用作些其他布樂見的事情而產生許多流量，因此在 2021 年初增加了這項限制的政策。</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://harveyChang67.github.io/posts/hello-world/</link>
      <pubDate>Sat, 25 Sep 2021 07:26:54 +0000</pubDate>
      
      <guid>https://harveyChang67.github.io/posts/hello-world/</guid>
      <description>Hugo + GitHub 的方式架設簡單的 Blog 很有趣，這邊紀錄幾個資訊。
 建置、測試環境：docker 編譯：Github Action Hosting：Github  Hugo 建置、測試環境：klakegg/hugo 環境指令：
docker run --rm -it -v $(pwd):/src klakegg/hugo:0.83.1 Windows 環境指令：
docker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 其後接 Hugo 的指令即可，例如：
  新增 post：
docker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 new posts/___.md   Local 執行 HUGO Server
docker run --rm -it -v %cd%:/src -p 1313:1313 klakegg/hugo:0.83.1 server   Themes：PaperMod https://github.com/adityatelange/hugo-PaperMod
裡面的安裝指引可供參考</description>
    </item>
    
  </channel>
</rss>
