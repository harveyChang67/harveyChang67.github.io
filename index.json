[{"content":"幾個關於當面試官的趣事記錄\n年輕真好 有個約3-4年工作經驗待業近半年的年輕人主動應徵， 當我初步簡介職缺的工作內容提到：\n 這個工作會需要些程式架構、系統架構設計\u0026hellip;\n 應徵者隨即脫口說：\n 完蛋了，這次我一定沒機會\u0026hellip;\n 好羨慕這樣純真年輕的心態。 我也給予很多鼓勵、建議。\n「我嚮往研發的工作\u0026hellip;」 接觸過幾個在現職崗位上表現得非常得心應手的傑出人才， 離職原因是想挑戰更多研發類型任務， 但也由於工作經歷上較缺相關經驗， 使得應聘方只能以實作題、白板題 等 Q\u0026amp;A 方式來進一步確認， 但取得的「情報」會偏向能力、個人特質， 老實說這在專業人資角度看是非常有風險的。\n曾在急中生智提出了這樣的試探問題：\n 「通常你怎麼使用 Google 查詢課題/障礙？」\n 我得到了非常有自信的答案：\n 「我通常只看搜尋結果的第一頁，這是關聯度最高、最有價值的\u0026hellip;」 「我會請教其他資深同仁，再嘗試其他關鍵字」\n 認真輸一半？ 看著許多履歷內容常注意到， 許多認真為公司、崗位付出的人才因為工作內容較為相似， 在履歷文件上卻著實遠遠輸給刻意規劃職涯的人選。\n若投身於維護類型工作最好要找些亮點出來（如 品質、速度、\u0026hellip;）， 否則光在技能就被屌打。\n當然，職涯規劃雕琢過的不見得符合需求方的要求。\n 易經 - 火山賁 當面試到這樣的人選時， 常替認真做事的人感到不值， 越能感到長輩說得對： 慎選產業、公司\n ","permalink":"https://harveyChang67.github.io/posts/2022_hiring/","summary":"幾個關於當面試官的趣事記錄\n年輕真好 有個約3-4年工作經驗待業近半年的年輕人主動應徵， 當我初步簡介職缺的工作內容提到：\n 這個工作會需要些程式架構、系統架構設計\u0026hellip;\n 應徵者隨即脫口說：\n 完蛋了，這次我一定沒機會\u0026hellip;\n 好羨慕這樣純真年輕的心態。 我也給予很多鼓勵、建議。\n「我嚮往研發的工作\u0026hellip;」 接觸過幾個在現職崗位上表現得非常得心應手的傑出人才， 離職原因是想挑戰更多研發類型任務， 但也由於工作經歷上較缺相關經驗， 使得應聘方只能以實作題、白板題 等 Q\u0026amp;A 方式來進一步確認， 但取得的「情報」會偏向能力、個人特質， 老實說這在專業人資角度看是非常有風險的。\n曾在急中生智提出了這樣的試探問題：\n 「通常你怎麼使用 Google 查詢課題/障礙？」\n 我得到了非常有自信的答案：\n 「我通常只看搜尋結果的第一頁，這是關聯度最高、最有價值的\u0026hellip;」 「我會請教其他資深同仁，再嘗試其他關鍵字」\n 認真輸一半？ 看著許多履歷內容常注意到， 許多認真為公司、崗位付出的人才因為工作內容較為相似， 在履歷文件上卻著實遠遠輸給刻意規劃職涯的人選。\n若投身於維護類型工作最好要找些亮點出來（如 品質、速度、\u0026hellip;）， 否則光在技能就被屌打。\n當然，職涯規劃雕琢過的不見得符合需求方的要求。\n 易經 - 火山賁 當面試到這樣的人選時， 常替認真做事的人感到不值， 越能感到長輩說得對： 慎選產業、公司\n ","title":"2022_hiring"},{"content":"Bloom Filter 布隆過濾器：「不存在 為可確定，存在 為＂可能＂」 聽朋友聊到 Bloom Filter 布隆過濾器覺得有趣， 做了點調查。\n這篇文章說明得較清楚： 深入浅出BloomFilter原理 - 刘训灼的文章 - 知乎\n由於 Bloom Filter 的原理特性 使得「不存在 為可確定，存在 為＂可能＂」， 存在可以推的（可控的）誤判率， 因此合適其優勢的情境有些特徵，如：\n 大數據 下 希望運用類 Hash 來過濾，希望避免 Hash 衝突 合適的 二元向量 數量 合適的 Hash function 數量  特別好奇於把一個對其＂存在＂具有一定誤判率的東西， 拿來用在「判断一个元素是否在集合中」的方式\u0026hellip; 頗有趣的可以強調 正面用、反面用。\n「不存在為確定」特性\n 緩存穿透 的攻擊，優先排除掉 不合規Key 的 request 訪問。 延伸課題：緩存做水平擴展、熱點調教、\u0026hellip;\n 運用「存在判斷有可控極低的誤判率」特性\n 爬蟲過濾掉疑似曾經訪問過的 URL。（代價是可能少抓到頁面）\n 特殊運用： 資料採集之：巧用布隆過濾器提取資料摘要\nReference 什么是缓存雪崩、缓存击穿、缓存穿透？ - java技术爱好者的文章 - 知乎 什么是缓存雪崩、击穿、穿透？ 布隆过滤器与布谷鸟过滤器 - 终端研发部的文章 - 知乎 硬核 | Redis 布隆（Bloom Filter）过滤器原理与实战 - 码哥字节的文章 - 知乎\n","permalink":"https://harveyChang67.github.io/posts/bloom_filter/","summary":"Bloom Filter 布隆過濾器：「不存在 為可確定，存在 為＂可能＂」 聽朋友聊到 Bloom Filter 布隆過濾器覺得有趣， 做了點調查。\n這篇文章說明得較清楚： 深入浅出BloomFilter原理 - 刘训灼的文章 - 知乎\n由於 Bloom Filter 的原理特性 使得「不存在 為可確定，存在 為＂可能＂」， 存在可以推的（可控的）誤判率， 因此合適其優勢的情境有些特徵，如：\n 大數據 下 希望運用類 Hash 來過濾，希望避免 Hash 衝突 合適的 二元向量 數量 合適的 Hash function 數量  特別好奇於把一個對其＂存在＂具有一定誤判率的東西， 拿來用在「判断一个元素是否在集合中」的方式\u0026hellip; 頗有趣的可以強調 正面用、反面用。\n「不存在為確定」特性\n 緩存穿透 的攻擊，優先排除掉 不合規Key 的 request 訪問。 延伸課題：緩存做水平擴展、熱點調教、\u0026hellip;\n 運用「存在判斷有可控極低的誤判率」特性\n 爬蟲過濾掉疑似曾經訪問過的 URL。（代價是可能少抓到頁面）\n 特殊運用： 資料採集之：巧用布隆過濾器提取資料摘要\nReference 什么是缓存雪崩、缓存击穿、缓存穿透？ - java技术爱好者的文章 - 知乎 什么是缓存雪崩、击穿、穿透？ 布隆过滤器与布谷鸟过滤器 - 终端研发部的文章 - 知乎 硬核 | Redis 布隆（Bloom Filter）过滤器原理与实战 - 码哥字节的文章 - 知乎","title":"Bloom_filter"},{"content":"2022 小小回顧 分享幾個今年的領會來做個回顧。\n《易經》教會我衡量主觀、客觀、時機、演變等道理， 讓我生活、工作中的多事讓我產生很多的省思。\n轉到現職時向天地、菩薩卜問的卦－巽卦很好的交代了我的工作內容。\n所在單位希望進行雲端化的大工程， 我嘗試幫忙在維護為主的組織文化中引領一群 Junior 挑戰 研發 任務， 在 團隊合作、成員培養、技術探勘、學習、舊AP的底層技術破解、人員招募 等方面都有著巽卦的寓意表現， （這部分也讓我曾被前同事說過很像 龍 的特點） 其中特別想分享的是我在 人員招募、團隊合作、技術學習方面 等方面在思維層面上的學習， 這些體驗的描述通常不會侷限在 單一觀點 或是限制在 單一層面， 造成不好理解的地方請多見諒。\n招募 這年我幫忙招募在 104 上看過了非常多的履歷，以及進行了不下 30 場面試面談，調整過數次我的面試面談的進行方式與提問內容。 首先我想分享的是：\n 你的 104 履歷被看過，不太表用人單位真的有興趣\n 原因很簡單：招募人員可以都先點開後續慢慢挑，下次查詢用「只看未讀」來過濾。 也因此常有人說 「104 的履歷可以關閉一陣子，微調內容再開，可能有新機會」的成因。 （當然，有時間的單位可以做個爬蟲去撈，分析內容關鍵字來省事）\n履歷內容的評估 引申出履歷內容最好要有：\n  深度（如 心智圖可以展開數層）。 將經歷 抽象化 的主要敘述，經歷成為 use case。 人格特質。（特別的心得、成就、行為慣性）   不知道各家資方除了技術關鍵字之外還會下什麼千奇百怪的\u0026hellip; （認真、負責、抗壓、\u0026hellip;） 但懶得寫請出、不擅長寫的人還是居多， 其次是寫不到重點（檢討中~）。\n特別的是，若能將思維脫離「讓人知道我」轉移到「針對需求去寫」那就神了。\n「過去績效不代表未來之表現」  半年前我對 適才適所 很不以為然，半年後我信了。\n 『適才適所』 這句話其實囊括了 主客觀 雙重因素去配合的， 正如《易經》 64 卦的 上下卦、7 habits 的 雙贏思維、知彼解己 的概念。\n眼前履歷上很強的高手其實是借助先前經歷中「天時地利人和」造就的 英雄， 能力方面可能很高機率合適， 但在團隊合作、作業模式、文化 等方面很高機會不合適。\n  「合適」的定義這仍有盲點，維護經驗好不代表無痛轉 研發 對外應用系統 的技能需求 不等於 內部應用系統的經驗 AP 經驗 不等於 打造基礎底層的能力   端看用人單位要的是什麼， 要 資質 代表要花成本培養型塑成理想人才， 要 即戰力 就必須先對自身需求做過分析後再開始。 （分析構想部分暫時偷懶）\n各項離職原因、經歷空白、選擇 Offer 的三大評估因素 必須交代清楚 較多意義是要觀察「你是什麼樣的人」。 延伸問題像是「最近做了什麼樣的學習？」、「有興趣的技術議題」\u0026hellip; （秉持的現場面談方式的面試則會進一步觀察行為語言、衣著、說話方式、\u0026hellip;）\n另外就是要看「坦承、誠懇」， 有應徵者會去過度包裝離職原因（或是草草帶過）， 或是 隱藏 「選擇 Offer 的三大評估因素」， 相信我，只要是有相當經驗的面試官都能辨識出來的。（剩下的就是各自的盤算）\n 于美人：「人生沒有用不到的經歷」\n 經歷空白方面，只要你不是 尼特族 就會做點什麼， 剩下的是在「職能上」、「個人能力」延伸累積， 若暫時還看不到關聯價值的話則應徵者較吃虧。\n各式各樣的測驗 淺顯的看法是 考線上題庫的方式得到有特定方面能力的人才， 通常要輔以其他面試搓合方式去評估， 當然也要看職缺內容是否與優化演算法、優化效能直接相關。\n相對的，普遍成本較低的做法要在 1-2 小時內就要判斷， 用基礎實作題 + CodeReview 來幫忙過濾會是個不錯的辦法。\n我買了3本刷題庫的書籍學習的感想是－這個測驗方式應該快失效了吧。 我的面談經驗中曾刷掉了 Leetcode 解不少 Hard 的應徵者， 原因是\n 實作題 的 coding style 顯得沒有質量（特別是AP開發經驗方面）。 面談 Q\u0026amp;A 對於架構、系統層面的理解凸顯出 見樹不見林 盲點的學習理解方式。  其他考智力測驗、國中英文、性向測驗的方式就看應徵者接不接受了， 假如該公司面試官夠有經驗， 是可以嘗試從履歷、Q\u0026amp;A中取得線索的， 將這樣的成本轉嫁到應徵者身上去的作法可能是希望貫徹「客觀數據化」的文化。 （考題庫的做法也屬於此）\n品格 應優先於 能力 面試最終是希望將人才放到工作中賦予任務， 期望能有特殊表現 或是 確實解決工作， 這個階段從管理者角度去看這名員工的觀點會漸轉為：\n 遇到障礙難題會做什麼？怎麼做？ 溝通中表達一句話 會怎麼說？  這也是應該面試注意找線索的點， 同時是應徵者履歷中應該表現出的亮點之一。\n比方說，爭取加薪會怎麼做？\n團隊合作 我很喜歡跟夥伴們一起做事的感覺， 從確認規格、設計、程式架構準備、Coding、自動測試、源碼掃描、CI/CD.. 各方面分工， 也很喜歡 Scrum 適合的 僕人式領導。 也許我該參考學習高階管理者的用人方式。\n技術 （從招募過程中透過 Q\u0026amp;A 我也學了些技術觀念）\n我協助單位在沒有詳細規格書、source code 的狀況下， 對運作10多年底層工具的關鍵技術做了理解上的破解， 率先完成了初版的實作驗證。\n先前是對維護開發品質的破譯讓我再學習了《孫子兵法》、軟體工程、行為心理等知識， 這次的技術破解則是廣泛對 分布式系統、原子操作、高併發 等知識做了學習， 也應用在 招募的面談中。\n年底時我針對這個技術又提出了破壞性的創新做法， 約等於是一項機制、算法等級， 實現了我內心深處對此技術總能再簡化的一個「感覺」。\n另方面， 我在 1個月內初次學習 C# 並建構 Generic 程式架構、Generic Unit Test， 目的是在不妨礙業務使用的條件下便於團隊成員協力、省力開發， 將複雜的改寫工作轉化為簡單的機械動作。\n","permalink":"https://harveyChang67.github.io/posts/2022_review/","summary":"2022 小小回顧 分享幾個今年的領會來做個回顧。\n《易經》教會我衡量主觀、客觀、時機、演變等道理， 讓我生活、工作中的多事讓我產生很多的省思。\n轉到現職時向天地、菩薩卜問的卦－巽卦很好的交代了我的工作內容。\n所在單位希望進行雲端化的大工程， 我嘗試幫忙在維護為主的組織文化中引領一群 Junior 挑戰 研發 任務， 在 團隊合作、成員培養、技術探勘、學習、舊AP的底層技術破解、人員招募 等方面都有著巽卦的寓意表現， （這部分也讓我曾被前同事說過很像 龍 的特點） 其中特別想分享的是我在 人員招募、團隊合作、技術學習方面 等方面在思維層面上的學習， 這些體驗的描述通常不會侷限在 單一觀點 或是限制在 單一層面， 造成不好理解的地方請多見諒。\n招募 這年我幫忙招募在 104 上看過了非常多的履歷，以及進行了不下 30 場面試面談，調整過數次我的面試面談的進行方式與提問內容。 首先我想分享的是：\n 你的 104 履歷被看過，不太表用人單位真的有興趣\n 原因很簡單：招募人員可以都先點開後續慢慢挑，下次查詢用「只看未讀」來過濾。 也因此常有人說 「104 的履歷可以關閉一陣子，微調內容再開，可能有新機會」的成因。 （當然，有時間的單位可以做個爬蟲去撈，分析內容關鍵字來省事）\n履歷內容的評估 引申出履歷內容最好要有：\n  深度（如 心智圖可以展開數層）。 將經歷 抽象化 的主要敘述，經歷成為 use case。 人格特質。（特別的心得、成就、行為慣性）   不知道各家資方除了技術關鍵字之外還會下什麼千奇百怪的\u0026hellip; （認真、負責、抗壓、\u0026hellip;） 但懶得寫請出、不擅長寫的人還是居多， 其次是寫不到重點（檢討中~）。\n特別的是，若能將思維脫離「讓人知道我」轉移到「針對需求去寫」那就神了。\n「過去績效不代表未來之表現」  半年前我對 適才適所 很不以為然，半年後我信了。\n 『適才適所』 這句話其實囊括了 主客觀 雙重因素去配合的， 正如《易經》 64 卦的 上下卦、7 habits 的 雙贏思維、知彼解己 的概念。","title":"2022_review"},{"content":"現職崗位有機會接觸代表不同 Cloud Service Provider 的顧問服務， 他們各自對自家服務產品都很熟稔、很專業， 但對於客製化上雲需求的課題卻顯得較輕忽。\n以實際經驗來說， 公司其他單位窗口詢問 AWS 顧問關於轉換地端 Database 資料上雲端的解決方案， 僅得到回答:「版本太舊\u0026hellip;」\n 我與同事早早有解決方案 x 2\u0026hellip;\n 另外是曾經詢問 Azure 顧問關於權限設定問題， 最後是 代理商 業務細心、耐心幫忙解答。\n 該顧問參與幾次會議老欠調查進度後消失\n 模仿一點點市場分群分析， 假設三大 Cloud Service Provider 都希望爭取更多人使用雲服務， （也許可以找到市調/問卷資料進一步分析） 較容易爭取的、需求較為普遍的客群 應有相當程度地成為使用者，（紅海） 剩下的客群假設有預算但上雲需求有遇到難度的， 這類生意做不做？\n我們確實也遇到這樣的案例， Google 代表做了許多 POC 承諾（業務面 domain knowhow 還沒掌握的狀況下）， 還真的用 Google AppSheet 爭取到案子。\n過程真的替他捏把汗， 看得出來對於系統架構面的專才， 但是很疏於透過 Q\u0026amp;A 去抽絲剝繭梳理 業務面進一步需求， 或是利用一些設計方法來確認客戶需求。\n或許扮演這樣角色的職缺會由其他代理商、軟體服務公司的「雲端解決方案架構師」以 POC 驗證型專案來銜接？\n","permalink":"https://harveyChang67.github.io/posts/cloud-service-provider_and_sloution_poc/","summary":"現職崗位有機會接觸代表不同 Cloud Service Provider 的顧問服務， 他們各自對自家服務產品都很熟稔、很專業， 但對於客製化上雲需求的課題卻顯得較輕忽。\n以實際經驗來說， 公司其他單位窗口詢問 AWS 顧問關於轉換地端 Database 資料上雲端的解決方案， 僅得到回答:「版本太舊\u0026hellip;」\n 我與同事早早有解決方案 x 2\u0026hellip;\n 另外是曾經詢問 Azure 顧問關於權限設定問題， 最後是 代理商 業務細心、耐心幫忙解答。\n 該顧問參與幾次會議老欠調查進度後消失\n 模仿一點點市場分群分析， 假設三大 Cloud Service Provider 都希望爭取更多人使用雲服務， （也許可以找到市調/問卷資料進一步分析） 較容易爭取的、需求較為普遍的客群 應有相當程度地成為使用者，（紅海） 剩下的客群假設有預算但上雲需求有遇到難度的， 這類生意做不做？\n我們確實也遇到這樣的案例， Google 代表做了許多 POC 承諾（業務面 domain knowhow 還沒掌握的狀況下）， 還真的用 Google AppSheet 爭取到案子。\n過程真的替他捏把汗， 看得出來對於系統架構面的專才， 但是很疏於透過 Q\u0026amp;A 去抽絲剝繭梳理 業務面進一步需求， 或是利用一些設計方法來確認客戶需求。\n或許扮演這樣角色的職缺會由其他代理商、軟體服務公司的「雲端解決方案架構師」以 POC 驗證型專案來銜接？","title":"Cloud Service Provider_and_sloution_poc"},{"content":"紀錄\nMaterialized Views 與 實體表的副本 做法真的一樣？\nWhat’s the catch?\n差異在 前者 會額外占用 memory， 因此最好用在更有價值的查詢結果快取上， 別想著拿來替代 AB表切換。\n ref:\n Understanding Materialized Views — Part 1 Materialized Views: The Cost-Effective Way To Extract Insights Why Use a Materialized View?  ","permalink":"https://harveyChang67.github.io/posts/materialized_views/","summary":"紀錄\nMaterialized Views 與 實體表的副本 做法真的一樣？\nWhat’s the catch?\n差異在 前者 會額外占用 memory， 因此最好用在更有價值的查詢結果快取上， 別想著拿來替代 AB表切換。\n ref:\n Understanding Materialized Views — Part 1 Materialized Views: The Cost-Effective Way To Extract Insights Why Use a Materialized View?  ","title":"Materialized_Views"},{"content":"一個 Batch Task 遇到一段 Code， SQL.Select in a for-loop that runs 25k times 特別是 for-loop 內 以 await 去使用了 async 的 DB Layer Func.\n我請團隊在 Parallel 的修改版本加上限制。\nvar parallel = new ParallelOptions { MaxDegreeOfParallelism = 5 }; 也與另一個做法 Task.Run, Task.WhenAll 進一步區隔。\n ref:\n Running Async Foreach Loop C# async await Parallel.ForEach vs Task.Run and Task.WhenAll https://gitter.im/npgsql/npgsql?at=595a0319c101bc4e3a46654d   系統式思考 這個課題在團隊內的討論很有趣， 討論過程中對於可能的問題不乏 AP Logic 有問題、SQL 有問題、\u0026hellip;， 但卻不太動手實測每段時間。\n那段邏輯在開發環境中執行一個 SQL SELECT Query 約 2ms， 但 For Loop 高達 3萬筆資料， 在 不修改 AP 主 Logic \u0026amp; SQL 的前提下可發揮的空間有限（數位轉型日常，除非先完成驗證過結果正確）， 因此團隊將 部分邏輯 改為 Parallel 是可以進行嘗試的。 （前提是該 AP Logic 不會因此修改造成 髒資料）\n事實上， 改為 Parallel 後在開發環境可以快速執行完， 反而證明這個情境中是 C# 造成延遲， 而非 SQL 造成延誤的直覺結論。\n","permalink":"https://harveyChang67.github.io/posts/dotnet_parallel/","summary":"一個 Batch Task 遇到一段 Code， SQL.Select in a for-loop that runs 25k times 特別是 for-loop 內 以 await 去使用了 async 的 DB Layer Func.\n我請團隊在 Parallel 的修改版本加上限制。\nvar parallel = new ParallelOptions { MaxDegreeOfParallelism = 5 }; 也與另一個做法 Task.Run, Task.WhenAll 進一步區隔。\n ref:\n Running Async Foreach Loop C# async await Parallel.ForEach vs Task.Run and Task.WhenAll https://gitter.im/npgsql/npgsql?at=595a0319c101bc4e3a46654d   系統式思考 這個課題在團隊內的討論很有趣， 討論過程中對於可能的問題不乏 AP Logic 有問題、SQL 有問題、\u0026hellip;， 但卻不太動手實測每段時間。\n那段邏輯在開發環境中執行一個 SQL SELECT Query 約 2ms， 但 For Loop 高達 3萬筆資料， 在 不修改 AP 主 Logic \u0026amp; SQL 的前提下可發揮的空間有限（數位轉型日常，除非先完成驗證過結果正確）， 因此團隊將 部分邏輯 改為 Parallel 是可以進行嘗試的。 （前提是該 AP Logic 不會因此修改造成 髒資料）","title":"Dotnet_parallel"},{"content":"將 Docker 映像部署至 Azure 容器執行個體\n","permalink":"https://harveyChang67.github.io/posts/azure_container/","summary":"將 Docker 映像部署至 Azure 容器執行個體","title":"Deploy docker image to Azure"},{"content":"易經《彖辭》中有十二卦提到「時」的「大矣哉」。 孔子晚年讀《易經》最有感想的是 『時也，命也。』\n孫子曰： 『昔之善戰者，先為不可勝，==以待敵之可勝==。不可勝在己，可勝在敵。故善戰者，能為不可勝，不能使敵之必可勝。故曰：勝可知，而不可為。』\n『故善戰者，求之於勢，不責於人，故能==擇人而任勢==。任勢者，其戰人也，如轉木石。木石之性，安則靜，危則動，方則止，圓則行。故善戰人之勢，如轉圓石於千仞之山者，勢也。』\n宣揚實踐理念、做事、\u0026hellip;. 都講求這個\u0026hellip; 難得糊塗~~\n","permalink":"https://harveyChang67.github.io/posts/timing_situation/","summary":"易經《彖辭》中有十二卦提到「時」的「大矣哉」。 孔子晚年讀《易經》最有感想的是 『時也，命也。』\n孫子曰： 『昔之善戰者，先為不可勝，==以待敵之可勝==。不可勝在己，可勝在敵。故善戰者，能為不可勝，不能使敵之必可勝。故曰：勝可知，而不可為。』\n『故善戰者，求之於勢，不責於人，故能==擇人而任勢==。任勢者，其戰人也，如轉木石。木石之性，安則靜，危則動，方則止，圓則行。故善戰人之勢，如轉圓石於千仞之山者，勢也。』\n宣揚實踐理念、做事、\u0026hellip;. 都講求這個\u0026hellip; 難得糊塗~~","title":"指引 =\u003e 槓桿 x 時勢"},{"content":"紀錄一下\n考量點  schema_version。 幾乎可以優先從「商業邏輯」、「畫面呈現」 等 high level來開始規劃。 document 是原子操作（atomic operation），規劃時必須考量「寫入、更新」頻繁程度，適度將 document 分散。 預先安插可用於 sharding 的設定欄位。  The Bucket Pattern 很適合 IoT、巡查表單類 的資料放置。\nThe Subset Pattern 文中提到的 Product - Reviews 案例很實用。 Product Collention 內紀錄前 10個 Review， 可以做為產品資訊頁「第一擊」的資訊儲存， 進一步的資訊再從其他 Collection 撈取。（如：Review）\nReference：\n Data Modeling for MongoDB Building with Patterns: A Summary  ","permalink":"https://harveyChang67.github.io/posts/moongodb_data_modeling/","summary":"紀錄一下\n考量點  schema_version。 幾乎可以優先從「商業邏輯」、「畫面呈現」 等 high level來開始規劃。 document 是原子操作（atomic operation），規劃時必須考量「寫入、更新」頻繁程度，適度將 document 分散。 預先安插可用於 sharding 的設定欄位。  The Bucket Pattern 很適合 IoT、巡查表單類 的資料放置。\nThe Subset Pattern 文中提到的 Product - Reviews 案例很實用。 Product Collention 內紀錄前 10個 Review， 可以做為產品資訊頁「第一擊」的資訊儲存， 進一步的資訊再從其他 Collection 撈取。（如：Review）\nReference：\n Data Modeling for MongoDB Building with Patterns: A Summary  ","title":"Moongodb_data_modeling"},{"content":"近期因 Team Building 需要，公司輔導我承攬了招募的工作， 有幸直接進 104 平台挖履歷， 三不五時會發現些 大神 或是 頗奇葩的資料：\n 智商 IQ 180 照片看起來根本是 灌籃高手 的 安西教練 真人版，相似度 99% 使用 Line 貼圖當作履歷照片 斐陶斐榮譽會員  經過一段時間的找合適的履歷與擔任面試官進行面談， 一邊同時對我自己的履歷、招聘的意義等進行檢討與思考， 這邊我分享一些從主觀、客觀觀點學到的心得感想。\n招聘方的困擾 一般招聘方作業大概是 HR 轉貼 用人單位開出來的條件， 或是 根據 這條件去幫忙找， 排除掉 HR 對 需求領域的經驗之外， 大概只能用概略理解、關鍵字 去幫忙找， 以及職務描述中普遍看到是需要「會/懂\u0026hellip;」、「x年經驗\u0026hellip;」。\n有更多時候是 用人單位主管並沒有時間去挖掘， 大家忙著忙著， 也就將招聘大事變成了 routine job 不假思索。\n藉助了 實作題、線上測驗、白板題 等來檢驗（希望取得客觀、可量測的評估）， 輔以 行為測驗、多次面試、人格特質發覺等等， 希望找到正確的人， 但相對地， 一段招聘過程成本非常大。\n招聘流程、評量方式等的侷限性與盲點， 也是造成常常應試者通過面試進入團隊後， 一年以內離開的主要原因。\n我們當然希望新同仁的表現可以：\n 符合JD上絕大部分的要求 完成所有設定的工作目標（最好能超出目標） 最好還能替團隊帶來正向影響力，感染其他人 任何其他好的驚喜\u0026hellip;  有沒有發現 JD 只佔了 1/4？ 以及一半以上的「期待」是抽象不好評估的\u0026hellip;\n有趣的是， 刷題是可以先準備訓練，搞到後面變成誰記得多誰贏， 但相對於 實際案件的問題來說， 刷題的測驗會相對地具有 原子性（Atomic）， 實際面對的問題是很高機會超過刷題， 也比智力測驗用的題目更實際。\n普遍說填鴨式教育不好， 難道邁入職場還是靠刷題庫（考古題）？ 現在時代能透過分析拆解問題、一台電腦、網路 Google 提出解決方案的方式可能才是王道。\n應徵者的罐頭履歷能交代清楚？ 大部分履歷也寫了像是「我會 .Net、Dapper..」， 但其實招聘者也看不出這位求職者「熟悉到什麼程度？」， 特別是 參加半年程式設計課程出來的求職者、剛畢業生、職場不同程度的經驗者\u0026hellip;， 寫出來的敘述也都很像。\n有實戰經驗者一般會加上「我做過什麼產品、專案、功能\u0026hellip;」， 或是 「參與過__競賽」， 但仍說不清楚「技能熟悉程度」， 以及「排除團隊其他夥伴的成果，你做了什麼？」\n『以終為始（begin with the end in mind）』－成功學大師史蒂芬‧柯維（Stephen Covey） 分享一個雖渺小但抽象意義有關聯的經驗： 我曾經在一個工作經驗中， 自行調查了公司當時 「網站維護案件的Bug率」， 從不同構面進行統計分析出 「每個 PG 平均產出 Bug ： 1 bug / 4 hrs」， 若不做點什麼， 剩下差別只在 這 bug 是 QA 抓到，還是客戶抓到\u0026hellip;\n後來我對大家習以為常的作業方式進行了進一步分析研究， 抓出盲點並進行調整， 最終連續22個案件都是 0 Bug。\n因此我對於招聘、應徵產生了一個 CP值取向的構想。\n招聘方：\n  JD 不能只提到技能，而應進一步加上進一步具體經驗/成果。例如：\n擅長 .Net Core C#，具有建構抽象化、N-Layer 程式架構者尤佳...   用個專案內碰到的課題出來考（修飾過），能檢驗履歷上具體經驗的程度、抽象的能力。 會比智力測驗實際。\n  一定要問應徵者經驗中遇到的最大挑戰、怎麼克服（伊隆馬斯克（Elon Musk）也曾分享過）。\n  問團隊相處相關的「衝突、對立」經驗、情境題。\n  應徵者：\n  履歷最好檢查一下。（對應上述第一點）\n  不要再寫流水帳式的工作經驗，意義不大。 工作經驗跟一般日記一般，不用說寫的人沒有熱情，看官也是直接掃過去算了，沒有「說故事」的軸心。\n  一定要有自傳。\n  工作經歷最好能有類似「事蹟」的重點整理。\n  感想 身處招聘方的一員稍稍理解了為什麼有句話「寧缺勿濫」， Not 寧缺勿「爛」。\n本身具有開放心態因為專案需要採取了「用人唯才」， 其他不那麼合適的地方再慢慢磨合就好\u0026hellip; （濫情 開始：開放心態\u0026lt;-\u0026gt;非開放 慢慢磨合）\n如同曾有認識的前輩老師開業專挑13號星期五\u0026hellip;\n未來還是以 人格特質、心理素質 作為考量優先。\n","permalink":"https://harveyChang67.github.io/posts/about_hiring_n_recruiting/","summary":"近期因 Team Building 需要，公司輔導我承攬了招募的工作， 有幸直接進 104 平台挖履歷， 三不五時會發現些 大神 或是 頗奇葩的資料：\n 智商 IQ 180 照片看起來根本是 灌籃高手 的 安西教練 真人版，相似度 99% 使用 Line 貼圖當作履歷照片 斐陶斐榮譽會員  經過一段時間的找合適的履歷與擔任面試官進行面談， 一邊同時對我自己的履歷、招聘的意義等進行檢討與思考， 這邊我分享一些從主觀、客觀觀點學到的心得感想。\n招聘方的困擾 一般招聘方作業大概是 HR 轉貼 用人單位開出來的條件， 或是 根據 這條件去幫忙找， 排除掉 HR 對 需求領域的經驗之外， 大概只能用概略理解、關鍵字 去幫忙找， 以及職務描述中普遍看到是需要「會/懂\u0026hellip;」、「x年經驗\u0026hellip;」。\n有更多時候是 用人單位主管並沒有時間去挖掘， 大家忙著忙著， 也就將招聘大事變成了 routine job 不假思索。\n藉助了 實作題、線上測驗、白板題 等來檢驗（希望取得客觀、可量測的評估）， 輔以 行為測驗、多次面試、人格特質發覺等等， 希望找到正確的人， 但相對地， 一段招聘過程成本非常大。\n招聘流程、評量方式等的侷限性與盲點， 也是造成常常應試者通過面試進入團隊後， 一年以內離開的主要原因。\n我們當然希望新同仁的表現可以：\n 符合JD上絕大部分的要求 完成所有設定的工作目標（最好能超出目標） 最好還能替團隊帶來正向影響力，感染其他人 任何其他好的驚喜\u0026hellip;  有沒有發現 JD 只佔了 1/4？ 以及一半以上的「期待」是抽象不好評估的\u0026hellip;","title":"About_hiring_n_recruiting 關於 雇用、招聘"},{"content":"易經－恆卦 雷風相與，巽卦在內，震卦在外，分別為柔、剛的「動」，並各得其所。\n可窺見恆常之道在於「有原則下的變通」，有所變有所不變，絕非一成不變。\n鑒於 恆卦 中的 坎象 也預示了 恆常 是相當不容易的，因此運用變通勤於「補過」、修正，來克服挑戰、檢討改善、優化\u0026hellip;。\n發想 假若說「巽卦」諭示的像風一樣變動快速、柔的力量無孔不入，逐漸嶄露頭角而進入 恆卦的話，確實很像運轉不息的 陀螺 般\u0026hellip;\n","permalink":"https://harveyChang67.github.io/posts/i_ching_32/","summary":"易經－恆卦 雷風相與，巽卦在內，震卦在外，分別為柔、剛的「動」，並各得其所。\n可窺見恆常之道在於「有原則下的變通」，有所變有所不變，絕非一成不變。\n鑒於 恆卦 中的 坎象 也預示了 恆常 是相當不容易的，因此運用變通勤於「補過」、修正，來克服挑戰、檢討改善、優化\u0026hellip;。\n發想 假若說「巽卦」諭示的像風一樣變動快速、柔的力量無孔不入，逐漸嶄露頭角而進入 恆卦的話，確實很像運轉不息的 陀螺 般\u0026hellip;","title":"I_ching_32 易經 恆卦"},{"content":"從 Azure Pipelines 內更動 DB 的方式\npsql ....  SSH task \u0026ndash;\u0026gt; Postgres + SSH Docker task(ver.1) + Run postres docker \u0026ndash;\u0026gt; psql\u0026hellip;  ","permalink":"https://harveyChang67.github.io/posts/azure_pipelines_rdb/","summary":"從 Azure Pipelines 內更動 DB 的方式\npsql ....  SSH task \u0026ndash;\u0026gt; Postgres + SSH Docker task(ver.1) + Run postres docker \u0026ndash;\u0026gt; psql\u0026hellip;  ","title":"Azure_pipelines_rdb"},{"content":"使用 Azure Pipelines 編譯 dotnet 時遇到一個狀況記錄下來。\n專案中有使用了沒有綁定 TimeZone 的時間相關函式， 造成資料寫入 DB 時有偏差， （DB 已設定）\n可以嘗試設定 Agent 的 TimeZone 設定， （透過 PowerShell task）： Win:\nGet-TimeZone Set-TimeZone \u0026#34;Taipei Standard Time\u0026#34; Get-TimeZone Ubuntu:\nsudo timedatectl set-timezone Asia/Taipei ","permalink":"https://harveyChang67.github.io/posts/azure_pipelines_timezone/","summary":"使用 Azure Pipelines 編譯 dotnet 時遇到一個狀況記錄下來。\n專案中有使用了沒有綁定 TimeZone 的時間相關函式， 造成資料寫入 DB 時有偏差， （DB 已設定）\n可以嘗試設定 Agent 的 TimeZone 設定， （透過 PowerShell task）： Win:\nGet-TimeZone Set-TimeZone \u0026#34;Taipei Standard Time\u0026#34; Get-TimeZone Ubuntu:\nsudo timedatectl set-timezone Asia/Taipei ","title":"Azure_pipelines_timezone"},{"content":"String to Class and then call Method var t = Type.GetType(\u0026#34;WebApplication1.Services.\u0026#34;+ServiceName+\u0026#34;, WebApplication1\u0026#34;); var service_instance = Activator.CreateInstance((t)); ServiceValues actual = (ServiceValues)service_instance.GetType().GetMethod(FunctionName).Invoke(service_instance, new object[] { temp, fm_repo }); 第一行可以參考後，再進一步優化程式。\nConsole.WriteLine(typeof(TService).AssemblyQualifiedName); 有考慮進一步改寫為 function，參數可能是 className, methodName, 參數：new object[] { temp, fm_repo }\n","permalink":"https://harveyChang67.github.io/posts/c_sharp_string2class/","summary":"String to Class and then call Method var t = Type.GetType(\u0026#34;WebApplication1.Services.\u0026#34;+ServiceName+\u0026#34;, WebApplication1\u0026#34;); var service_instance = Activator.CreateInstance((t)); ServiceValues actual = (ServiceValues)service_instance.GetType().GetMethod(FunctionName).Invoke(service_instance, new object[] { temp, fm_repo }); 第一行可以參考後，再進一步優化程式。\nConsole.WriteLine(typeof(TService).AssemblyQualifiedName); 有考慮進一步改寫為 function，參數可能是 className, methodName, 參數：new object[] { temp, fm_repo }","title":"C_sharp_string2class"},{"content":"需求 老式需求\n3 個欄位的資訊， 希望擷取出中間的 16 bytes 的欄位\n20040609台北市第81分公司0800-000123 20040609彰化縣第1分公司 0800-000123 通常會困擾於 編譯器對於資料型態長度的判定、編碼。 （其他程式語言也會遇到類似狀況）\n在 C# 中則會遇到 string Length 變動的問題無法如預期做切割， 因此運用「==Big5編碼==」方式在 中文佔用 2 bytes、英數佔用 1 bytes 的特性， 再轉為 sub string。\nSystem.Text.Encoding encoding = System.Text.Encoding.GetEncoding(950); string tempstr = \u0026#34;\u0026#34;; byte[] strBytes = encoding.GetBytes(str); tempstr = encoding.GetString(strBytes, start, lengths); ","permalink":"https://harveyChang67.github.io/posts/c_sharp_big5/","summary":"需求 老式需求\n3 個欄位的資訊， 希望擷取出中間的 16 bytes 的欄位\n20040609台北市第81分公司0800-000123 20040609彰化縣第1分公司 0800-000123 通常會困擾於 編譯器對於資料型態長度的判定、編碼。 （其他程式語言也會遇到類似狀況）\n在 C# 中則會遇到 string Length 變動的問題無法如預期做切割， 因此運用「==Big5編碼==」方式在 中文佔用 2 bytes、英數佔用 1 bytes 的特性， 再轉為 sub string。\nSystem.Text.Encoding encoding = System.Text.Encoding.GetEncoding(950); string tempstr = \u0026#34;\u0026#34;; byte[] strBytes = encoding.GetBytes(str); tempstr = encoding.GetString(strBytes, start, lengths); ","title":"C_sharp_big5"},{"content":"RepoDB 在 Generic Repository Pattern 中很好用， 免去使用 Dapper 去自建 SQL 產生器， 但是有幾個限制 RepoDB Limitations， 其中一個令人訝異 -\u0026gt; Composite Keys。\nComposite Keys RepoDB 只會處理 1 個 Primary Key\u0026hellip;. 這邊紀錄兩個相關的資訊\nUpdate + condition termsList.Add( new QueryField(\u0026#39;Id\u0026#39;, Operation.Equal, \u0026#39;10095\u0026#39;) ); termsList.Add( new QueryField(\u0026#39;Name\u0026#39;, Operation.Equal, \u0026#39;John\u0026#39;) ); ret = dbConn.Update(entity, new QueryGroup(termsList, Conjunction.And)); Primary Properties Model 中標註 Mapping，\npublic class FMRMUSRT { [Primary] // Primary decoration  public string Id { get; set; } [Primary] // Primary decoration  public string item_cd { get; set; } public string? remark { get; set; } } 在 Repo. 中是可以抓取判斷：\nif (property.GetPrimaryAttribute() != null) // This property is primary ","permalink":"https://harveyChang67.github.io/posts/repodb_c#/","summary":"RepoDB 在 Generic Repository Pattern 中很好用， 免去使用 Dapper 去自建 SQL 產生器， 但是有幾個限制 RepoDB Limitations， 其中一個令人訝異 -\u0026gt; Composite Keys。\nComposite Keys RepoDB 只會處理 1 個 Primary Key\u0026hellip;. 這邊紀錄兩個相關的資訊\nUpdate + condition termsList.Add( new QueryField(\u0026#39;Id\u0026#39;, Operation.Equal, \u0026#39;10095\u0026#39;) ); termsList.Add( new QueryField(\u0026#39;Name\u0026#39;, Operation.Equal, \u0026#39;John\u0026#39;) ); ret = dbConn.Update(entity, new QueryGroup(termsList, Conjunction.And)); Primary Properties Model 中標註 Mapping，\npublic class FMRMUSRT { [Primary] // Primary decoration  public string Id { get; set; } [Primary] // Primary decoration  public string item_cd { get; set; } public string?","title":"RepoDB_C#"},{"content":"MAC x EC2 Reference: How to launch a macOS instance on Amazon EC2 (Mac instances)\n放新加坡，速度慢慢的\n","permalink":"https://harveyChang67.github.io/posts/mac_on_aws_ec2/","summary":"MAC x EC2 Reference: How to launch a macOS instance on Amazon EC2 (Mac instances)\n放新加坡，速度慢慢的","title":"Mac_on_aws_ec2"},{"content":"Database  Amazon RDS NoSQL  權衡 可靠性 x 性能 下，兩類型對比：Aurora vs DynamoDB\nAmazon redshift 非資料庫 而是 Data Warehouse。 Data Warehouse\n","permalink":"https://harveyChang67.github.io/posts/aws_saa-c02/","summary":"Database  Amazon RDS NoSQL  權衡 可靠性 x 性能 下，兩類型對比：Aurora vs DynamoDB\nAmazon redshift 非資料庫 而是 Data Warehouse。 Data Warehouse","title":"Aws_saa C02"},{"content":"小米、紅米 搭配使用 Vanced Youtube 無法撥放到 ChromeCast的解法 降板！\nhttps://itechify.com/2021/10/10/unable-to-cast-youtube-vanced-on-tv-here-is-the-fix/\n","permalink":"https://harveyChang67.github.io/posts/vanced_yt_xiomi/","summary":"小米、紅米 搭配使用 Vanced Youtube 無法撥放到 ChromeCast的解法 降板！\nhttps://itechify.com/2021/10/10/unable-to-cast-youtube-vanced-on-tv-here-is-the-fix/","title":"Vanced_yt_xiomi"},{"content":"單機鎖 TODO\n分布式鎖 相關  單機鎖\u0026ndash;\u0026gt;分布式鎖：架構面試題 #1, 線上交易的正確性 將 Redlock 有關的問題整理清楚：  如何做可靠的分布式锁，Redlock真的可行么 https://twgreatdaily.com/fGfHe28BMH2_cNUgKj2O.html     概念 悲觀鎖（Pessimistic Lock） 預期每次都會遇到資源爭奪。\n共享鎖（Share Lock） 排他鎖（Exclusive Lock）\n作用範圍：\n  行鎖（row lock） FOR UPDATE、FOR UPDATE NO KEY、LOCK IN SHARE MODE\n  表鎖（table lock）\nSELECT SUM(..) FROM ..   樂觀鎖（Optimistic Lock） Optimistic Concurrency Control 每次存取都認為不會有別人來搶。\nCAS（比較與交換，Compare and swap）\n 非阻塞同步（Non-blocking Synchronization）、無鎖程式設計演算法（ Non-blocking algorithm）\n 適合：讀多寫少。 反之，將有很多的寫衝突造成等待\n CAS有3個運算元  記憶體值V 舊的預期值A 要修改的新值B 當且僅當預期值A和記憶體值V相同時，將記憶體值V修改為B，否則什麼都不做。   整個CAS操作是一個原子操作 判斷作法  TimeStamp Version 待更新欄位：更新前可以拿要更新的欄位的舊值和資料庫的現值進行比對，沒有變化則更新  https://stackoverflow.com/a/62959208   所有欄位：相當於表鎖    implement Entity Framework Core\n https://docs.microsoft.com/zh-tw/ef/core/saving/concurrency  延伸、變通  Apache Ignite 避免 Deadlock 類似 MVCC\u0026hellip; Oracle 9i\u0026hellip; PostgreSQL Redis 內部也有 lock optimistic locking in REST API  https://linuxtut.com/en/c4585a2373c15d84c1d9/ https://blog.appsignal.com/2021/10/20/optimistic-locking-in-rails-rest-apis.html https://sookocheff.com/post/api/optimistic-locking-in-a-rest-api/   分布鎖  https://liulixiang1988.github.io/2021/08/13/2021-08-13-DistributedLockManager/    ","permalink":"https://harveyChang67.github.io/posts/lock/","summary":"單機鎖 TODO\n分布式鎖 相關  單機鎖\u0026ndash;\u0026gt;分布式鎖：架構面試題 #1, 線上交易的正確性 將 Redlock 有關的問題整理清楚：  如何做可靠的分布式锁，Redlock真的可行么 https://twgreatdaily.com/fGfHe28BMH2_cNUgKj2O.html     概念 悲觀鎖（Pessimistic Lock） 預期每次都會遇到資源爭奪。\n共享鎖（Share Lock） 排他鎖（Exclusive Lock）\n作用範圍：\n  行鎖（row lock） FOR UPDATE、FOR UPDATE NO KEY、LOCK IN SHARE MODE\n  表鎖（table lock）\nSELECT SUM(..) FROM ..   樂觀鎖（Optimistic Lock） Optimistic Concurrency Control 每次存取都認為不會有別人來搶。\nCAS（比較與交換，Compare and swap）\n 非阻塞同步（Non-blocking Synchronization）、無鎖程式設計演算法（ Non-blocking algorithm）\n 適合：讀多寫少。 反之，將有很多的寫衝突造成等待\n CAS有3個運算元  記憶體值V 舊的預期值A 要修改的新值B 當且僅當預期值A和記憶體值V相同時，將記憶體值V修改為B，否則什麼都不做。   整個CAS操作是一個原子操作 判斷作法  TimeStamp Version 待更新欄位：更新前可以拿要更新的欄位的舊值和資料庫的現值進行比對，沒有變化則更新  https://stackoverflow.","title":"Lock"},{"content":"Azure Devops 內的 Git 權限設定，AZ-400會有考題問到關於 Pull、Push 所需要設定的權限。\n實際測試要有 「Contribute」 才能 Push。\n","permalink":"https://harveyChang67.github.io/posts/azure_devops_reader/","summary":"Azure Devops 內的 Git 權限設定，AZ-400會有考題問到關於 Pull、Push 所需要設定的權限。\n實際測試要有 「Contribute」 才能 Push。","title":"Azure_devops_reader"},{"content":"  Go Deployment in Menu then select Local Git item.   Configure credential.   Push Source to Git Repo @ Azure   ","permalink":"https://harveyChang67.github.io/posts/deploy_local_git_to_azure_app_service/","summary":"  Go Deployment in Menu then select Local Git item.   Configure credential.   Push Source to Git Repo @ Azure   ","title":"Deploy_local_git_to_azure_app_service"},{"content":"  AAD \u0026gt; Enterprise Application \u0026gt; devops \u0026gt; User :   Azure Devops 側還是無法.取得訂閱資訊\n  就算由 Owner 建好 Service Connection 也無法讓 guest、member 直接使用，原因是操作 pipeline 的 account 對於訂閱的權限不夠。  從 Azure Portal 處給予該 account 至少 Reader 的角色   訂閱 \u0026gt; IAM \u0026gt; add role assignment\n 但是此法有缺點，無法單一授權、指定 project 授權。\n","permalink":"https://harveyChang67.github.io/posts/azure_portal_devops_config/","summary":"AAD \u0026gt; Enterprise Application \u0026gt; devops \u0026gt; User :   Azure Devops 側還是無法.取得訂閱資訊\n  就算由 Owner 建好 Service Connection 也無法讓 guest、member 直接使用，原因是操作 pipeline 的 account 對於訂閱的權限不夠。  從 Azure Portal 處給予該 account 至少 Reader 的角色   訂閱 \u0026gt; IAM \u0026gt; add role assignment\n 但是此法有缺點，無法單一授權、指定 project 授權。","title":"Azure_portal_devops_config"},{"content":"Linux 執行 .sh 後出現 Syntax Error\n Syntax error: end of file unexpected (expecting “then”)\n 問題不是語法錯誤，而是檔案編碼問題。\n解決辦法是：\n dos2unix  或是 VSCode 右下方從 CRLF --\u0026gt; LF\n","permalink":"https://harveyChang67.github.io/posts/linux_run_sh_error/","summary":"Linux 執行 .sh 後出現 Syntax Error\n Syntax error: end of file unexpected (expecting “then”)\n 問題不是語法錯誤，而是檔案編碼問題。\n解決辦法是：\n dos2unix  或是 VSCode 右下方從 CRLF --\u0026gt; LF","title":"Linux_run_sh_error"},{"content":"Static Website Pages \u0026ndash;\u0026gt; Blob Ref：Host a static website in Azure Storage\nC#.Net API \u0026ndash;\u0026gt; Azure App Service TODO\n","permalink":"https://harveyChang67.github.io/posts/azure_website/","summary":"Static Website Pages \u0026ndash;\u0026gt; Blob Ref：Host a static website in Azure Storage\nC#.Net API \u0026ndash;\u0026gt; Azure App Service TODO","title":"Azure_website"},{"content":"記錄用\n證照考試因為接觸到的資源是以英文為主， 為了避免關鍵字句不習慣翻譯版本（甚至簡體中文）， 所以考試可能、預設採用英文， 但是英文閱讀能力不頂尖的可能會敗在情境題組， 如：一整頁說明現況、各類型需求後， 再往下才會看到真正的題目。\n實際應考發現， 各種英文閱讀考試技巧確實有用， 大概如下：\n 快速掃描一次情境敘述，弄清楚『各處資訊類型』 看題目、選項後再去文章找有關資訊 答題  另方面， 上完證照課程後 ＂絕對＂ 不要直接去考試， 請去刷一下題庫感受一下：\n 出題方式 出題方向  畢竟結果還是王道。\n","permalink":"https://harveyChang67.github.io/posts/cert_exam/","summary":"記錄用\n證照考試因為接觸到的資源是以英文為主， 為了避免關鍵字句不習慣翻譯版本（甚至簡體中文）， 所以考試可能、預設採用英文， 但是英文閱讀能力不頂尖的可能會敗在情境題組， 如：一整頁說明現況、各類型需求後， 再往下才會看到真正的題目。\n實際應考發現， 各種英文閱讀考試技巧確實有用， 大概如下：\n 快速掃描一次情境敘述，弄清楚『各處資訊類型』 看題目、選項後再去文章找有關資訊 答題  另方面， 上完證照課程後 ＂絕對＂ 不要直接去考試， 請去刷一下題庫感受一下：\n 出題方式 出題方向  畢竟結果還是王道。","title":"Cret Exam"},{"content":"No need \u0026lsquo;vmnetcfg\u0026rsquo;, just do 「3 Steps」:\n  check \u0026lsquo;VMNet\u0026rsquo; on Host   add new \u0026lsquo;Network Adapter\u0026rsquo;   Config Network on Guest   Enjoy it ps. Because the image i used is backuoed from other pc(windows server 2003), so i added a new \u0026lsquo;Network Adapter\u0026rsquo;. Maybe you can edit config the #1 Net Adapter.\n","permalink":"https://harveyChang67.github.io/posts/config_net_in_vmplayer/","summary":"No need \u0026lsquo;vmnetcfg\u0026rsquo;, just do 「3 Steps」:\n  check \u0026lsquo;VMNet\u0026rsquo; on Host   add new \u0026lsquo;Network Adapter\u0026rsquo;   Config Network on Guest   Enjoy it ps. Because the image i used is backuoed from other pc(windows server 2003), so i added a new \u0026lsquo;Network Adapter\u0026rsquo;. Maybe you can edit config the #1 Net Adapter.","title":"Config_net_in_vmplayer"},{"content":"購買 Azure 訂閱中 Devops 要注意的部分， 可以使用 Devops 的訂閱狀況有 3 種：\n Azure basic Visual Studio Enterprise Visual Studio Professional  ps. 若您的訂閱都不是上列方案，卻可以使用 Repos、Pipelines MS Hosted 的話就恭喜了\n","permalink":"https://harveyChang67.github.io/posts/azure_subscriber/","summary":"購買 Azure 訂閱中 Devops 要注意的部分， 可以使用 Devops 的訂閱狀況有 3 種：\n Azure basic Visual Studio Enterprise Visual Studio Professional  ps. 若您的訂閱都不是上列方案，卻可以使用 Repos、Pipelines MS Hosted 的話就恭喜了","title":"Azure_subscriber"},{"content":"產生並信任你自己的憑證 https://letsencrypt.org/zh-tw/docs/certificates-for-localhost/\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\  -newkey rsa:2048 -nodes -sha256 \\  -subj \u0026#39;/CN=localhost\u0026#39; -extensions EXT -config \u0026lt;( \\  printf \u0026#34;[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\u0026#34;) 也說了 minica\n2 https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8\n有些方法 還有 mkcert \u0026lt;\u0026ndash; 最方便\n","permalink":"https://harveyChang67.github.io/posts/signed-cert/","summary":"產生並信任你自己的憑證 https://letsencrypt.org/zh-tw/docs/certificates-for-localhost/\nopenssl req -x509 -out localhost.crt -keyout localhost.key \\  -newkey rsa:2048 -nodes -sha256 \\  -subj \u0026#39;/CN=localhost\u0026#39; -extensions EXT -config \u0026lt;( \\  printf \u0026#34;[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\u0026#34;) 也說了 minica\n2 https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8\n有些方法 還有 mkcert \u0026lt;\u0026ndash; 最方便","title":"Signed Cert"},{"content":" Webpack 3 quickstarter: Configure webpack from scratch 初学者应该看的 Webpack 完整指南（2020） 鐵人賽系列－Webpack  ","permalink":"https://harveyChang67.github.io/posts/webpack_learning/","summary":" Webpack 3 quickstarter: Configure webpack from scratch 初学者应该看的 Webpack 完整指南（2020） 鐵人賽系列－Webpack  ","title":"Webpack_learning"},{"content":"IE8  Vue3 確定不支援 Vue2透過打包工具（babel）+運氣 可支援，有機會因為功能、使用lib較單純而可通過測試。  IE11  Vue3 原先可以，後來被移除 Vue2.x可以  Refs  https://stackoverflow.com/a/64837153 https://github.com/Ivocin/Translation/blob/master/Docs/0000-vue3-ie11-support.md https://v3.cn.vuejs.org/guide/migration/migration-build.html#%E9%A2%84%E6%9C%9F%E7%94%A8%E4%BE%8B  ","permalink":"https://harveyChang67.github.io/posts/vue_ie/","summary":"IE8  Vue3 確定不支援 Vue2透過打包工具（babel）+運氣 可支援，有機會因為功能、使用lib較單純而可通過測試。  IE11  Vue3 原先可以，後來被移除 Vue2.x可以  Refs  https://stackoverflow.com/a/64837153 https://github.com/Ivocin/Translation/blob/master/Docs/0000-vue3-ie11-support.md https://v3.cn.vuejs.org/guide/migration/migration-build.html#%E9%A2%84%E6%9C%9F%E7%94%A8%E4%BE%8B  ","title":"Vue \u0026 IE 相容問題"},{"content":"vite.config.js 中加入：\nserver: { // for HRM in Docker  host: \u0026#39;0.0.0.0\u0026#39;, watch: { usePolling: true }, } ","permalink":"https://harveyChang67.github.io/posts/hrm-docker/","summary":"vite.config.js 中加入：\nserver: { // for HRM in Docker  host: \u0026#39;0.0.0.0\u0026#39;, watch: { usePolling: true }, } ","title":"HRM Docker"},{"content":"GitKraken v7.7.2 之後改個設定就好： Windows 上執行的話，需要指定 GitKraken 關於 『sh.exe』的 path。\n","permalink":"https://harveyChang67.github.io/posts/husky-gitkraken/","summary":"GitKraken v7.7.2 之後改個設定就好： Windows 上執行的話，需要指定 GitKraken 關於 『sh.exe』的 path。","title":"Husky \u0026 Gitkraken"},{"content":"因為 Azure Devops 的 Service Connection 上面沒有詳細說明，這邊紀錄下來。\n 依照 安裝 OpenSSH 在 VM 上安裝 SSH Server 參考 OpenSSH 金鑰管理 建立使用者金鑰 務必參考這一段 部署公開金鑰  ","permalink":"https://harveyChang67.github.io/posts/azure_pipelines_ssh_service_connection/","summary":"因為 Azure Devops 的 Service Connection 上面沒有詳細說明，這邊紀錄下來。\n 依照 安裝 OpenSSH 在 VM 上安裝 SSH Server 參考 OpenSSH 金鑰管理 建立使用者金鑰 務必參考這一段 部署公開金鑰  ","title":"Azure Pipelines 設定 SSH 不用密碼的 Service Connection"},{"content":"LINQ Samples\n101 LINQ Samples\nLINQ: Query Comprehension Syntax\n","permalink":"https://harveyChang67.github.io/posts/linq_cheat_sheet/","summary":"LINQ Samples\n101 LINQ Samples\nLINQ: Query Comprehension Syntax","title":"LINQ cheat sheet"},{"content":"references  Making Http Requests in a Node.js Lambda Function proxy-agent Configuring Proxies for Node.js  ","permalink":"https://harveyChang67.github.io/posts/proxy_on_lambda/","summary":"references  Making Http Requests in a Node.js Lambda Function proxy-agent Configuring Proxies for Node.js  ","title":"Proxy_on_lambda"},{"content":"大部分資料、使用情境是\n 外面 -\u0026gt; 固定 -\u0026gt; API Gateway -\u0026gt; \u0026hellip;\n 使用情境若反過來的具體解答較少， 這邊分享一下測試過的方式。\n ENI + Static Public IP NAT Gateway Private Subnet -\u0026gt; NAT Gateway Lambda 網路設定綁 Private Subnet  可以在 AWS 另建 API Gateway + Resource Policy 限定IP 來測試。\nReferences  Setting a Static IP for AWS Lambda (or any AWS instance) AWS Lambda functions with a static IP Tutorial: Build a Hello World REST API with Lambda proxy integration Create a REST API with Lambda proxy integration  ","permalink":"https://harveyChang67.github.io/posts/aws_api_gateway_with_static_ip/","summary":"大部分資料、使用情境是\n 外面 -\u0026gt; 固定 -\u0026gt; API Gateway -\u0026gt; \u0026hellip;\n 使用情境若反過來的具體解答較少， 這邊分享一下測試過的方式。\n ENI + Static Public IP NAT Gateway Private Subnet -\u0026gt; NAT Gateway Lambda 網路設定綁 Private Subnet  可以在 AWS 另建 API Gateway + Resource Policy 限定IP 來測試。\nReferences  Setting a Static IP for AWS Lambda (or any AWS instance) AWS Lambda functions with a static IP Tutorial: Build a Hello World REST API with Lambda proxy integration Create a REST API with Lambda proxy integration  ","title":"AWS API Gateway 對外時能走固定IP的作法"},{"content":"Youtube  Debug WPF and Winforms .NET in Linux on a Remote Machine Delivering Desktop Apps in Containers Containerize WINDOWS desktop apps with LINUX containers using WINE. Desktop Apps in Docker Containers  Docker  scottyhardy/docker-wine wine-x11-novnc-docker Run A windows application with docker  ","permalink":"https://harveyChang67.github.io/posts/about_containerize_windows_app/","summary":"Youtube  Debug WPF and Winforms .NET in Linux on a Remote Machine Delivering Desktop Apps in Containers Containerize WINDOWS desktop apps with LINUX containers using WINE. Desktop Apps in Docker Containers  Docker  scottyhardy/docker-wine wine-x11-novnc-docker Run A windows application with docker  ","title":"關於幾個將 Win App 容器化的資訊"},{"content":" VSCode Extension: Draw.io Integration diagrams-net-azure-libraries  ","permalink":"https://harveyChang67.github.io/posts/drwaio_vscode/","summary":" VSCode Extension: Draw.io Integration diagrams-net-azure-libraries  ","title":"VsCode 繪製 Draw.io"},{"content":"直觀寫法肯定是：\n Readline() 每行比對、處理一次  這邊有兩個網頁做了 ＂充分的＂實驗比對，\n C# .Net: Fastest Way to Read Text Files The Fastest Way to Read and Process Text Files using C# .Net  結論是， 把檔案都讀進 Array （相當於進記憶體）， 再運用平行運算處理完。\n","permalink":"https://harveyChang67.github.io/posts/c-sharp-the-fastest-way-to-_-text/","summary":"直觀寫法肯定是：\n Readline() 每行比對、處理一次  這邊有兩個網頁做了 ＂充分的＂實驗比對，\n C# .Net: Fastest Way to Read Text Files The Fastest Way to Read and Process Text Files using C# .Net  結論是， 把檔案都讀進 Array （相當於進記憶體）， 再運用平行運算處理完。","title":"C# 處理大 Text 檔案的實驗比對"},{"content":"基本原則  Variables in trigger block is not supported. Maybe all YAML file of Pipelines are same in all branches.  template  http://thecodemanual.pl/2020/04/02/build-templates-on-azure-devops.html https://docs.microsoft.com/zh-tw/azure/devops/pipelines/process/templates?view=azure-devops  detect CHANGED Dir to build \u0026amp; deploy  coding in PowerShell to detect What files are changed, get DIR and combine ARRAY build \u0026amp; deploy via FACTORY PATTERN  References:\n https://stackoverflow.com/questions/54541602/pass-array-as-inputs-to-azure-devops-yaml-task https://stackoverflow.com/questions/62835740/loops-and-arrays-in-azure-devops-pipelines https://stackoverflow.com/questions/53227343/triggering-azure-devops-builds-based-on-changes-to-sub-folders https://stackoverflow.com/questions/65088433/how-to-get-only-changed-files-using-azure-devops-pipelines https://stackoverflow.com/questions/67483194/pass-array-of-files-into-the-parameter-of-awscli1-task/67498247#67498247 https://stackoverflow.com/questions/68504910/can-i-loop-an-azure-pipelines-task-on-a-runtime-array-variable-instead-of-an-arr https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.1#adding-to-arrays  開始 try 的：\nvariables: f1Flag: false f2Flag: false trigger: branches: include: - master # paths: # include: # - \u0026#34;test_pipelines/*\u0026#34; steps: - powershell: |## get the changed files $files=$(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion)) $temp=$files -split \u0026#39; \u0026#39; $count=$temp.Length echo \u0026#34;Total changed $count files\u0026#34; For ($i=0; $i -lt $temp.Length; $i++) { $name=$temp[$i] echo \u0026#34;this is $name file\u0026#34; if ($name -like \u0026#39;test_pipelines/*\u0026#39;)  #if test_pipelines is a subfolder under a folder use \u0026#34;- like \u0026#39;*/f1/*\u0026#39;\u0026#34; { ##set the flag variable f1Flag to true Write-Host \u0026#34;##vso[task.setvariable variable=f1Flag]true\u0026#34; } } - script: echo $(f1Flag) - script: echo $(f2Flag) just clone DIR  https://www.google.com/search?q=azure+checkout+path\u0026amp;rlz=1C1GCEU_zh-TWTW969TW969\u0026amp;oq=azure+checkout+path\u0026amp;aqs=chrome..69i57j0i19i30j0i8i19i30l5j69i60.7638j0j1\u0026amp;sourceid=chrome\u0026amp;ie=UTF-8 https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/checkout-path.md  ","permalink":"https://harveyChang67.github.io/posts/notes_for_azure_pipelines/","summary":"基本原則  Variables in trigger block is not supported. Maybe all YAML file of Pipelines are same in all branches.  template  http://thecodemanual.pl/2020/04/02/build-templates-on-azure-devops.html https://docs.microsoft.com/zh-tw/azure/devops/pipelines/process/templates?view=azure-devops  detect CHANGED Dir to build \u0026amp; deploy  coding in PowerShell to detect What files are changed, get DIR and combine ARRAY build \u0026amp; deploy via FACTORY PATTERN  References:\n https://stackoverflow.com/questions/54541602/pass-array-as-inputs-to-azure-devops-yaml-task https://stackoverflow.com/questions/62835740/loops-and-arrays-in-azure-devops-pipelines https://stackoverflow.com/questions/53227343/triggering-azure-devops-builds-based-on-changes-to-sub-folders https://stackoverflow.com/questions/65088433/how-to-get-only-changed-files-using-azure-devops-pipelines https://stackoverflow.com/questions/67483194/pass-array-of-files-into-the-parameter-of-awscli1-task/67498247#67498247 https://stackoverflow.com/questions/68504910/can-i-loop-an-azure-pipelines-task-on-a-runtime-array-variable-instead-of-an-arr https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.1#adding-to-arrays  開始 try 的：\nvariables: f1Flag: false f2Flag: false trigger: branches: include: - master # paths: # include: # - \u0026#34;test_pipelines/*\u0026#34; steps: - powershell: |## get the changed files $files=$(git diff-tree --no-commit-id --name-only -r $(Build.","title":"幾項關於 Azure Pipelines 的紀錄"},{"content":"近日看到一篇討論文章： c# string performance - what is faster to compare, string text or string length\n被接受的答案雖然蠻合理的，但有其他補充關於 C# String 的 source code 可以發現：\n都考量到了\n所以可以直接比對\u0026hellip;\n","permalink":"https://harveyChang67.github.io/posts/dotnet_compare_string/","summary":"近日看到一篇討論文章： c# string performance - what is faster to compare, string text or string length\n被接受的答案雖然蠻合理的，但有其他補充關於 C# String 的 source code 可以發現：\n都考量到了\n所以可以直接比對\u0026hellip;","title":"Compare: String Text or String Length?"},{"content":"最近當了「Yaml 檔工程師」玩了 Azure Devops Pipelines，終於完成 Azure 編譯 Winforms 專案 並 部署到測試環境（VM）上面，過程中花了點時間找路，這邊紀錄一下。\nKey concepts for new Azure Pipelines 優先參考：\n Key concepts for new Azure Pipelines users 新 Azure Pipelines 使用者的重要概念  文內地一張圖片有說明了 Azure Pipelines YAML 的結構階層關係，所以 YAML 檔案內的結構看啟回會像是這樣：\ntrigger: pool: stages: - stage: A jobs: - job: 1 steps: - task: - stage: B jobs: - deployment: VMDeploy 這也能從 YAML 結構描述參考找到資訊印證。\n好玩的來了\u0026hellip;\nDeploy to VM 會從 Environment - virtual machine resource找到從 Pipeline deploy 到 VM 的方法，恰好裡面有一段：\ntrigger: - main pool: vmImage: ubuntu-latest jobs: - deployment: VMDeploy displayName: Deploy to VM 那段 jobs 就是關鍵了！ 如果你的 YAML 在編譯那一段所參考的範例是以 steps 為主的，就必須先微調一下以 stage 來區隔，成為上面說的正確的結構。\n更多資訊  Specify jobs in your pipeline 指定管線中的作業 使用預先定義的變數  ","permalink":"https://harveyChang67.github.io/posts/azure-pipelines-key-concepts/","summary":"最近當了「Yaml 檔工程師」玩了 Azure Devops Pipelines，終於完成 Azure 編譯 Winforms 專案 並 部署到測試環境（VM）上面，過程中花了點時間找路，這邊紀錄一下。\nKey concepts for new Azure Pipelines 優先參考：\n Key concepts for new Azure Pipelines users 新 Azure Pipelines 使用者的重要概念  文內地一張圖片有說明了 Azure Pipelines YAML 的結構階層關係，所以 YAML 檔案內的結構看啟回會像是這樣：\ntrigger: pool: stages: - stage: A jobs: - job: 1 steps: - task: - stage: B jobs: - deployment: VMDeploy 這也能從 YAML 結構描述參考找到資訊印證。\n好玩的來了\u0026hellip;\nDeploy to VM 會從 Environment - virtual machine resource找到從 Pipeline deploy 到 VM 的方法，恰好裡面有一段：","title":"Azure Pipelines Key Concepts"},{"content":"  刪除專案中 *.vssscc、*.vspscc 副檔名的檔案。\n  刪除 .sln 內的 GlobalSection(TeamFoundationVersionControl) 區塊。\n  內部的 *.__proj 檔案內的這幾項也必須刪除：\n\u0026lt;SccProjectName\u0026gt;XXX\u0026lt;/SccProjectName\u0026gt; \u0026lt;SccLocalPath\u0026gt;XXX\u0026lt;/SccLocalPath\u0026gt; \u0026lt;SccAuxPath\u0026gt;XXX\u0026lt;/SccAuxPath\u0026gt; \u0026lt;SccProvider\u0026gt;XXX\u0026lt;/SccProvider\u0026gt; 萬一實在太多了，請這條正規表示式 /^\\s*(?:\u0026lt;Scc\\w+\u0026gt;).+$/，使用 Notepad++ search \u0026amp; replace。\n  ","permalink":"https://harveyChang67.github.io/posts/remove-tfs-connection-from-vs-solution/","summary":"  刪除專案中 *.vssscc、*.vspscc 副檔名的檔案。\n  刪除 .sln 內的 GlobalSection(TeamFoundationVersionControl) 區塊。\n  內部的 *.__proj 檔案內的這幾項也必須刪除：\n\u0026lt;SccProjectName\u0026gt;XXX\u0026lt;/SccProjectName\u0026gt; \u0026lt;SccLocalPath\u0026gt;XXX\u0026lt;/SccLocalPath\u0026gt; \u0026lt;SccAuxPath\u0026gt;XXX\u0026lt;/SccAuxPath\u0026gt; \u0026lt;SccProvider\u0026gt;XXX\u0026lt;/SccProvider\u0026gt; 萬一實在太多了，請這條正規表示式 /^\\s*(?:\u0026lt;Scc\\w+\u0026gt;).+$/，使用 Notepad++ search \u0026amp; replace。\n  ","title":"Remove Tfs Connection From vs Solution"},{"content":"若 WinForms 的專案有依些外部參考的 dll 在編譯時需要引入，數量有可能20-30個不等。 若因為並非這個專案內 Code Base所產生而不想放在 Git Repository 內，上去 Azure Devops 編譯可以這樣處理：\n  全部壓縮一包 .zip\n  上傳至「Library」   設定開放給 Pipeline 引用的權限   在 Pipelines 的 yaml 設定內加上 Download \u0026amp; Extract   編譯時可以加上參數指定這個暫時路徑：\n- task: VSBuild@1 inputs: solution: \u0026#39;**\\*.csproj\u0026#39; platform: \u0026#39;AnyCPU\u0026#39; configuration: \u0026#39;$(BuildConfiguration)\u0026#39; msbuildArgs: \u0026#39;/p:referencepath=$(Agent.TempDirectory)/reference\u0026#39; clean: true   就可以完成了。\n","permalink":"https://harveyChang67.github.io/posts/azure-pipelines-libaray-securefile/","summary":"若 WinForms 的專案有依些外部參考的 dll 在編譯時需要引入，數量有可能20-30個不等。 若因為並非這個專案內 Code Base所產生而不想放在 Git Repository 內，上去 Azure Devops 編譯可以這樣處理：\n  全部壓縮一包 .zip\n  上傳至「Library」   設定開放給 Pipeline 引用的權限   在 Pipelines 的 yaml 設定內加上 Download \u0026amp; Extract   編譯時可以加上參數指定這個暫時路徑：\n- task: VSBuild@1 inputs: solution: \u0026#39;**\\*.csproj\u0026#39; platform: \u0026#39;AnyCPU\u0026#39; configuration: \u0026#39;$(BuildConfiguration)\u0026#39; msbuildArgs: \u0026#39;/p:referencepath=$(Agent.TempDirectory)/reference\u0026#39; clean: true   就可以完成了。","title":"Azure Pipelines 編譯VS專案引用外部參考資源 － Libaray Securefile"},{"content":"嘗試用 Azure Pipeline 編譯 WinForms 的程式遇到一個問題：\n 「No hosted parallelism has been purchased or granted」\n 直接依照指示到 https://aka.ms/azpipelines-parallelism-request 填寫完成後 1-2個工作日可以完成 （操作步驟可以參考：【把玩Azure DevOps】Day8 CI/CD從這裡：設定第一個Pipeline(成功與失敗)）\n看國外論壇討論說，因為微軟發現有不少人趁著試用作些其他布樂見的事情而產生許多流量，因此在 2021 年初增加了這項限制的政策。\n","permalink":"https://harveyChang67.github.io/posts/pipeline-error-about-free-parallelism/","summary":"嘗試用 Azure Pipeline 編譯 WinForms 的程式遇到一個問題：\n 「No hosted parallelism has been purchased or granted」\n 直接依照指示到 https://aka.ms/azpipelines-parallelism-request 填寫完成後 1-2個工作日可以完成 （操作步驟可以參考：【把玩Azure DevOps】Day8 CI/CD從這裡：設定第一個Pipeline(成功與失敗)）\n看國外論壇討論說，因為微軟發現有不少人趁著試用作些其他布樂見的事情而產生許多流量，因此在 2021 年初增加了這項限制的政策。","title":"Pipeline Error About Free Parallelism"},{"content":"Hugo + GitHub 的方式架設簡單的 Blog 很有趣，這邊紀錄幾個資訊。\n 建置、測試環境：docker 編譯：Github Action Hosting：Github  Hugo 建置、測試環境：klakegg/hugo 環境指令：\ndocker run --rm -it -v $(pwd):/src klakegg/hugo:0.83.1 Windows 環境指令：\ndocker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 其後接 Hugo 的指令即可，例如：\n  新增 post：\ndocker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 new posts/___.md   Local 執行 HUGO Server\ndocker run --rm -it -v %cd%:/src -p 1313:1313 klakegg/hugo:0.83.1 server   Themes：PaperMod https://github.com/adityatelange/hugo-PaperMod\n裡面的安裝指引可供參考\n","permalink":"https://harveyChang67.github.io/posts/hello-world/","summary":"Hugo + GitHub 的方式架設簡單的 Blog 很有趣，這邊紀錄幾個資訊。\n 建置、測試環境：docker 編譯：Github Action Hosting：Github  Hugo 建置、測試環境：klakegg/hugo 環境指令：\ndocker run --rm -it -v $(pwd):/src klakegg/hugo:0.83.1 Windows 環境指令：\ndocker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 其後接 Hugo 的指令即可，例如：\n  新增 post：\ndocker run --rm -it -v %cd%:/src klakegg/hugo:0.83.1 new posts/___.md   Local 執行 HUGO Server\ndocker run --rm -it -v %cd%:/src -p 1313:1313 klakegg/hugo:0.83.1 server   Themes：PaperMod https://github.com/adityatelange/hugo-PaperMod\n裡面的安裝指引可供參考","title":"Hello World"},{"content":"招募心得－履歷表、測驗數字、人？ 由於獲得單位信任， 我負責了小組人力的招募已近 2年， 包括104履歷表查詢、主要面談、技能評估等， 在歷經夥伴離開追夢、員額擴編、歡迎新夥伴加入..後， 終於即將迎來滿編。\n因為我習慣用心學習、研究， 我克服了缺乏 HR 專才協助的困境， 逐漸累積了些心得、經驗， 如：分析履歷特徵、結構化面試決策方法等， 感到非常有意思。\n假如我要分享給 2年前的我， 會建議參考 UX設計－人物誌（Persona）， 優先將招募目標在組織內做個釐清確認。\n分析出符合求職市況的招募需求 招募重點應該是在「人」。 我認為有個作法可以幫助避免陷入在繁瑣的評估條件裡。 可以針對這個職缺， 找出幾個單位內的同仁作為理想人物， 來確認團隊、組織內的需求認知。\n以 前端工程師 為例， 若用關鍵字在 104 上搜尋， 履歷提到 Figma 並不表示能在繪製 Wireframe、Flow Chart； 實務經驗 Nuxt則有可能不擅長原生框架 Vue.js 的開發； Coding 方面講究的人選甚至有可能不碰切版。\n當我們將履歷進一步分析歸類可初步觀察到， 將 前端工程師 進行「分群」， 很粗淺的幾個「角色」舉例：\n UI兼前端 資訊科系的前端 設計師轉前端 其他領域轉前端 （也許再分 Junior / Senior。）  如此，能將視野拉高在單純的技能條件中， 在履歷過濾階段進行較有意義的過濾。\n在即戰力需求的崗位上會避開轉行前端的潛在人才， 避免只因為某些技能符合就錄取， 但因存活率偏低造成公司多幾筆負評。 作為資方要透過這個「角色」、「理想人物」作衡量。\n結構化面試評比法 參考《精準決策》中的「線性模型」， 公平地測驗所有應徵者， 再進一步轉化為可作加權的數字。\n這方法至少能避免面試官忘記要問什麼.. 當應徵者許多條件相近時頗有用， 或進一步影響核薪。 （原來將活生生的人轉化為數字就這用途\u0026hellip;）\n拉夥伴一起參與 降低獨自判斷產生的盲點， 同時培養團隊內的人才。\n未來前置SOP  分析初步搜尋的履歷，進行分群分類。 內部透過「理想夥伴」的類比來釐清確認需求。 匹配【1】、【2】，看到群體模式。  ","permalink":"https://harveyChang67.github.io/posts/2023_hiring/","summary":"招募心得－履歷表、測驗數字、人？ 由於獲得單位信任， 我負責了小組人力的招募已近 2年， 包括104履歷表查詢、主要面談、技能評估等， 在歷經夥伴離開追夢、員額擴編、歡迎新夥伴加入..後， 終於即將迎來滿編。\n因為我習慣用心學習、研究， 我克服了缺乏 HR 專才協助的困境， 逐漸累積了些心得、經驗， 如：分析履歷特徵、結構化面試決策方法等， 感到非常有意思。\n假如我要分享給 2年前的我， 會建議參考 UX設計－人物誌（Persona）， 優先將招募目標在組織內做個釐清確認。\n分析出符合求職市況的招募需求 招募重點應該是在「人」。 我認為有個作法可以幫助避免陷入在繁瑣的評估條件裡。 可以針對這個職缺， 找出幾個單位內的同仁作為理想人物， 來確認團隊、組織內的需求認知。\n以 前端工程師 為例， 若用關鍵字在 104 上搜尋， 履歷提到 Figma 並不表示能在繪製 Wireframe、Flow Chart； 實務經驗 Nuxt則有可能不擅長原生框架 Vue.js 的開發； Coding 方面講究的人選甚至有可能不碰切版。\n當我們將履歷進一步分析歸類可初步觀察到， 將 前端工程師 進行「分群」， 很粗淺的幾個「角色」舉例：\n UI兼前端 資訊科系的前端 設計師轉前端 其他領域轉前端 （也許再分 Junior / Senior。）  如此，能將視野拉高在單純的技能條件中， 在履歷過濾階段進行較有意義的過濾。\n在即戰力需求的崗位上會避開轉行前端的潛在人才， 避免只因為某些技能符合就錄取， 但因存活率偏低造成公司多幾筆負評。 作為資方要透過這個「角色」、「理想人物」作衡量。\n結構化面試評比法 參考《精準決策》中的「線性模型」， 公平地測驗所有應徵者， 再進一步轉化為可作加權的數字。\n這方法至少能避免面試官忘記要問什麼.. 當應徵者許多條件相近時頗有用， 或進一步影響核薪。 （原來將活生生的人轉化為數字就這用途\u0026hellip;）","title":""}]